#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
#include <locale>
#include <windows.h>
#define epsilon 1e-7
int main()
{
    setlocale(LC_ALL, "RUSSIAN");
    float y = 0, sum = 0, c = 0, s = 0;
    int n = 0, p = 0, ch = 0;
    scanf("%d", &n);
    float* otvet = (float*)malloc(n * sizeof(float));
    for (int i = 0; i < n; i++) {
        otvet[i] = 0;
    }
    float** a = (float**)malloc(n * sizeof(float*));
    for (int i = 0; i < n; i++) {
        a[i] = (float*)malloc(n * sizeof(float));
    }
    for (int i = 0; i < n; i++) {
        p = 0;
        for (int j = 0; j < n; j++) {
            scanf("%f", &a[i][j]);
            if (a[i][j] == 0) {
                p++;
            }
        }
        if (p == n) {
            printf("Определитель матрицы = 0");
            return 0;
        }
    }
    for (int i = 0; i < n; i++) {
        p = 0;
        for (int j = 0; j < n; j++) {
            if (a[j][i] == 0) {
                p++;
            }
        }
        if (p == n) {
            printf("Определитель матрицы = 0");
            return 0;
        }
    }

    for (int i = 0, v = 0; i < n - 1; (i++, v++)) {
        s = 0;
        if (a[i][v] == 0) {
            for (int u = 0; u < n; u++) {
                s += a[u][v] * a[u][v];
            }
            if (s == 0) {
                i--;
                continue;
            }
            for (int q = i + 1; q < n; q++) {
                if (a[q][v] != 0) {
                    for (int r = 0; r < n; r++) {
                        c = a[i][r];
                        a[i][r] = a[q][r];
                        a[q][r] = c;
                    }
                    ch++;
                }
            }
        }
        for (int g = i + 1; g < n; g++) {
            if (a[g][v] == 0) {
                continue;
            }
            y = a[g][v] / (float)a[i][v];
            for (int j = 0; j < n; j++) {
                a[g][j] = a[g][j] + (-1 * a[i][j] * y);
            }

        }
    }
    float ot = 1;
    for (int i = 0; i < n; i++) {
        ot=ot*a[i][i];
    }
    if (ch % 2 != 0) {
        ot = -ot;
    }
    if (ot<epsilon && ot>-epsilon) {
        ot = 0;
    }
    printf("Определитель матрицы = %0.3f", ot);
    return 0;
}
