#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
#include <locale>
#include <windows.h>
int main()
{
    setlocale(LC_ALL, "RUSSIAN");
    float y = 0, sum = 0, c = 0, s = 0;
    int n = 0, m = 0, rang = 0;
    scanf("%d%d", &m, &n);
    rang = n;
    float* otvet = (float*)malloc(n * sizeof(float));
    for (int i = 0; i < n; i++) {
        otvet[i] = 0;
    }
    float** a = (float**)malloc(n * sizeof(float));
    for (int i = 0; i < n; i++) {
        a[i] = (float*)malloc(m * sizeof(float));
    }
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            scanf("%f", &a[i][j]);
        }
    }

    for (int i = 0, v=0; i < n - 1; (i++, v++)) {
        s = 0;
        if (a[i][v] == 0) {
            for (int u = 0; u < n; u++) {
                s += a[u][v] * a[u][v];
            }
            if (s == 0) {
                i--;
                continue;
            }
            for (int q = i + 1; q < n; q++) {
                if (a[q][v] != 0) {
                    for (int r = 0; r < m; r++) {
                        c = a[i][r];
                        a[i][r] = a[q][r];
                        a[q][r] = c;
                    }
                }
            }
        }
        for (int g = i + 1; g < n; g++) {
            if (a[g][v] == 0) {
                continue;
            }
            y = a[g][v] / (float)a[i][v];
            for (int j = 0; j < m; j++) {
                a[g][j] = a[g][j] + (-1 * a[i][j] * y);
            }
            for (int i = 0; i < n; i++) {
                for (int j = 0; j < m; j++) {
                    printf("%f ", a[i][j]);
                }
                printf("\n");
            }
            printf("\n");
        }
        printf("\n");
    }

    for (int i = 0; i < n; i++) {
        sum = 0;
        for (int j = 0; j < m; j++) {
            sum += a[i][j] * a[i][j];
        }
        if (sum == 0) {
            rang = i;
            break;
        }
    }
    printf("Вектора образуют линейно независимую систему ранга %d", rang);
    return 0;
}
